#
# Build:
#	docker build --no-cache -t ubuntu-tpc-hmm .
#
FROM ubuntu:18.04

RUN export DEBIAN_FRONTEND=noninteractive; apt-get -qq update; apt-get -y install cmake libxerces-c-dev \
libapr1-dev libaprutil1-dev wget libicu-dev liblucene++-dev liblucene++ bc poppler-utils \
icu-devtools bzip2 linux-headers-generic build-essential unzip software-properties-common curlftpfs \
software-properties-common autoconf libboost-all-dev libpodofo-dev libpodofo-utils doxygen libpqxx-dev \
libfcgi++ libmagick++-dev libcurl4-openssl-dev postfix libdb5.3-dev libdb5.3++-dev libdb5.3++-stl-dev \
libeigen3-dev postgresql-client postgresql postgresql-contrib cimg-dev git lighttpd python3 python3-pip libnsspem

RUN wget https://archive.apache.org/dist/uima/uimacpp-2.4.0/uimacpp-2.4.0-src.zip -O uimacpp.zip \
&& unzip uimacpp.zip && rm uimacpp.zip

### install openjdk-8-jdk
#RUN apt-get -y install openjdk-8-jdk
## install openjdk-11-jdk
RUN apt-get -y install openjdk-11-jdk

# apply uima patches for CXX11-14
COPY ./patches/uimacpp-2.4.0/src/framework/uima/strtools.hpp /uimacpp-2.4.0/src/framework/uima/strtools.hpp
COPY ./patches/uimacpp-2.4.0/configure.ac /uimacpp-2.4.0/

## compile and install uima library
RUN cd uimacpp-2.4.0; autoconf -i; chmod +x configure; ./configure --without-activemq \
--with-jdk="/usr/lib/jvm/java-11-openjdk-amd64/include -I/usr/lib/jvm/java-11-openjdk-amd64/include/linux" \
--with-icu=/usr --enable-static --enable-shared --prefix=/usr/local && make -j8 && make install && rm -rf /uimacpp-2.4.0

# compile and install wt - the version provided by ubuntu is bugged!
RUN wget https://github.com/emweb/wt/archive/3.3.7.tar.gz -O wt-3.3.7.tar.gz \
&& tar xzf wt-3.3.7.tar.gz && rm wt-3.3.7.tar.gz && cd wt-3.3.7 \
&& mkdir build && cd build && cmake .. && make -j8 && make install && rm -rf /wt-3.3.7

# google test
RUN git clone https://github.com/google/googletest.git; cd googletest; git checkout release-1.11.0; mkdir cmake-build-release; cd cmake-build-release; cmake ..; \
make -j8 ; make install

# python packages
RUN pip3 install psycopg2 lxml

# perl packages
RUN cpan -T -f -i DBD::Pg HTTP::Request.pm LWP::UserAgent

# compile podofo-0.9.3
ADD podofo-0.9.3.tar.gz /.
WORKDIR /podofo-0.9.3
RUN mkdir -p build
WORKDIR /podofo-0.9.3/build
RUN cmake -G "Unix Makefiles" DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release -DPODOFO_BUILD_SHARED:BOOL=TRUE .. \
&& make -j 8 && make install \
&& rm /usr/lib/libpodofo* \
&& ln -s /usr/local/lib/libpodofo* /usr/lib/. \
&& rm -rf /podofo-0.9.3

# install popplerlab
RUN apt-get update
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y -q gcc g++ libboost-all-dev \
libssl-dev libpq-dev libssl-dev locales
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y -q libfreetype6-dev \
libfontconfig1-dev libjpeg-dev libopenjp2-7-dev libboost-dev libnss3-dev libcurl4-nss-dev \
libtiff5-dev
ADD poppler-data-0.4.11.tar.gz /
WORKDIR /poppler-data-0.4.11
RUN mkdir -p build && cd build && cmake .. && make && make install && rm -rf /poppler-data-0.4.11
ADD popplerlab-21.11.0.tgz /
WORKDIR /popplerlab-21.11.0
RUN mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_UTILS=OFF \
-DENABLE_CPP=OFF -DBUILD_MANUAL_TESTS=OFF -DENABLE_UNSTABLE_API_ABI_HEADERS=ON \
-DENABLE_GLIB=OFF .. && make -j 8 && make install && ldconfig && rm -rf /popplerlab-21.11.0

WORKDIR /
RUN mkdir libtpc
COPY . libtpc/
RUN cd libtpc; rm -r cmake-build-release; mkdir cmake-build-release; cd cmake-build-release; cmake ..; make -j 8 ; make install; rm -rf /libtpc

EXPOSE 80
